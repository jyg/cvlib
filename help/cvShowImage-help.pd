#N canvas 453 118 665 539 12;
#X declare -lib pix_opencv;
#X obj 231 194 gemwin;
#X text 507 409 window with title;
#X text 510 462 sized window;
#X text 507 383 untitled window;
#X obj 19 3 cnv 15 700 60 empty empty CVLIB:OpenCV_with_Pure_Data 20
30 0 30 -219146 -66577 0;
#X text 20 170 1) create gem window ----->;
#X msg 423 167 destroy;
#X text 272 352 cvShowImage Arguments :;
#X text 510 489 sized window with title;
#X obj 241 486 cvShowImage My_Sized_Window 320 240;
#X obj 240 460 cvShowImage 320 240;
#X obj 244 407 cvShowImage My_Window;
#X obj 244 381 cvShowImage;
#X obj 355 266 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 351 291 vis \$1;
#X text 411 292 show / hide the window;
#N canvas 0 0 450 300 TO_DO 0;
#X msg 39 107 pos \$1 \$2;
#X msg 38 141 size \$1 \$2;
#X msg 38 176 size auto;
#X obj 158 239 outlet;
#X text 61 16 METHODS TO BE IMPLEMENTED IN THE FUTURE;
#X text 159 106 move the window;
#X text 157 139 resize the window;
#X text 160 178 fit size to image size (default);
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X restore 524 260 pd TO_DO;
#X obj 183 235 gemhead;
#X obj 177 271 pix_video;
#X msg 231 168 dimen 20 20 \, create \, 1;
#X text 19 114 To work properly \, cv.ShowImage needs GEM window to
be created....;
#X obj 176 301 cvShowImage my_cam;
#X obj 562 24 cvlib-overview;
#X obj 520 103 declare -lib pix_opencv;
#X text 21 80 cvShowImage : draw an image (pix_data) in a window;
#X text 15 330 supported formats : rgba \, gray;
#X connect 6 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 21 0;
#X connect 16 0 21 0;
#X connect 17 0 18 0;
#X connect 18 0 21 0;
#X connect 19 0 0 0;
